const OFF = 'off';
const WARN = 1;
module.exports = {
  root: true,
  env: {
    commonjs: true,
    node: true,
    browser: true,
    es6: true,
    jest: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:@typescript-eslint/recommended',
    'eslint-config-prettier',
  ],
  plugins: ['react-hooks'],
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      node: {
        paths: ['src'],
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
  ignorePatterns: ['node_modules/'],
  rules: {
    'prefer-rest-params': WARN,
    'jsx-a11y/no-autofocus': WARN,
    'jsx-a11y/alt-text': WARN,
    'react-hooks/rules-of-hooks': WARN, // Checks rules of Hooks
    'react-hooks/exhaustive-deps': WARN, // Checks effect dependencies
    'jsx-a11y/click-events-have-key-events': WARN,
    'jsx-a11y/no-static-element-interactions': WARN,
    'jsx-a11y/mouse-events-have-key-events': WARN,
    'jsx-a11y/no-noninteractive-element-interactions': WARN,
    'jsx-a11y/anchor-is-valid': WARN,
    'import/named': WARN,
    'import/namespace': [2, { allowComputed: false }],
    'import/no-unresolved': [WARN, { amd: true }],
    '@typescript-eslint/no-non-null-asserted-optional-chain': 'off',
    'no-extra-boolean-cast': 'off',
    'no-irregular-whitespace': 'off',
    'no-unsafe-optional-chaining': 'off',
    'no-async-promise-executor': 'off',
    'no-prototype-builtins': 'off',
    'no-fallthrough': 'off',
    'prefer-const': 'off',
    'no-empty': 'off',
    'no-case-declarations': 'off',
    'no-constant-condition': 'off',
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-this-alias': 'off',
    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'no-empty-function': 'off',
    '@typescript-eslint/no-empty-function': ['off'],
    // 'prettier/prettier': [
    //   'warn',
    //   {
    //     singleQuote: true,
    //     semi: false,
    //     trailingComma: 'all',
    //     endOfLine: 'auto',
    //   },
    // ],
    '@typescript-eslint/no-namespace': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    'no-useless-escape': 0,
    'no-unused-expressions': 0,
    'no-useless-constructor': 0,
    '@typescript-eslint/no-useless-constructor': 'error',
    indent: 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    eqeqeq: 0,
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    // suppress errors for missing 'import React' in files
    'react/react-in-jsx-scope': 'off',
    'react/prop-types': [WARN],
    'react/jsx-key': [WARN, { checkFragmentShorthand: true }],
    'react/no-children-prop': [WARN, { allowFunctions: true }],
    'react/display-name': [WARN, { ignoreTranspilerName: false, checkContextObjects: true }],
    // allow jsx syntax in js files (for next.js project)
    'react/jsx-filename-extension': [WARN, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
  },
};
